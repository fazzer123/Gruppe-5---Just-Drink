//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gui.OrderLineServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderLine", Namespace="http://schemas.datacontract.org/2004/07/ModelLayer")]
    [System.SerializableAttribute()]
    public partial class OrderLine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gui.OrderLineServiceRef.Drink DrinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gui.OrderLineServiceRef.Drink Drink {
            get {
                return this.DrinkField;
            }
            set {
                if ((object.ReferenceEquals(this.DrinkField, value) != true)) {
                    this.DrinkField = value;
                    this.RaisePropertyChanged("Drink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Drink", Namespace="http://schemas.datacontract.org/2004/07/ModelLayer")]
    [System.SerializableAttribute()]
    public partial class Drink : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gui.OrderLineServiceRef.Ingredient[] IngredientsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Img {
            get {
                return this.ImgField;
            }
            set {
                if ((object.ReferenceEquals(this.ImgField, value) != true)) {
                    this.ImgField = value;
                    this.RaisePropertyChanged("Img");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gui.OrderLineServiceRef.Ingredient[] Ingredients {
            get {
                return this.IngredientsField;
            }
            set {
                if ((object.ReferenceEquals(this.IngredientsField, value) != true)) {
                    this.IngredientsField = value;
                    this.RaisePropertyChanged("Ingredients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ingredient", Namespace="http://schemas.datacontract.org/2004/07/ModelLayer")]
    [System.SerializableAttribute()]
    public partial class Ingredient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ProcentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Procent {
            get {
                return this.ProcentField;
            }
            set {
                if ((this.ProcentField.Equals(value) != true)) {
                    this.ProcentField = value;
                    this.RaisePropertyChanged("Procent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OrderLineServiceRef.IOrderLineService")]
    public interface IOrderLineService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderLineService/CreateOrderLine", ReplyAction="http://tempuri.org/IOrderLineService/CreateOrderLineResponse")]
        void CreateOrderLine(Gui.OrderLineServiceRef.OrderLine orderline, int orderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderLineService/CreateOrderLine", ReplyAction="http://tempuri.org/IOrderLineService/CreateOrderLineResponse")]
        System.Threading.Tasks.Task CreateOrderLineAsync(Gui.OrderLineServiceRef.OrderLine orderline, int orderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderLineService/GetOrderLine", ReplyAction="http://tempuri.org/IOrderLineService/GetOrderLineResponse")]
        Gui.OrderLineServiceRef.OrderLine GetOrderLine(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderLineService/GetOrderLine", ReplyAction="http://tempuri.org/IOrderLineService/GetOrderLineResponse")]
        System.Threading.Tasks.Task<Gui.OrderLineServiceRef.OrderLine> GetOrderLineAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderLineService/GetAllOrderlines", ReplyAction="http://tempuri.org/IOrderLineService/GetAllOrderlinesResponse")]
        Gui.OrderLineServiceRef.OrderLine[] GetAllOrderlines();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderLineService/GetAllOrderlines", ReplyAction="http://tempuri.org/IOrderLineService/GetAllOrderlinesResponse")]
        System.Threading.Tasks.Task<Gui.OrderLineServiceRef.OrderLine[]> GetAllOrderlinesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderLineService/GetDrink", ReplyAction="http://tempuri.org/IOrderLineService/GetDrinkResponse")]
        Gui.OrderLineServiceRef.Drink GetDrink(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderLineService/GetDrink", ReplyAction="http://tempuri.org/IOrderLineService/GetDrinkResponse")]
        System.Threading.Tasks.Task<Gui.OrderLineServiceRef.Drink> GetDrinkAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderLineService/DeleteOrderLineByID", ReplyAction="http://tempuri.org/IOrderLineService/DeleteOrderLineByIDResponse")]
        void DeleteOrderLineByID(int OrderLineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderLineService/DeleteOrderLineByID", ReplyAction="http://tempuri.org/IOrderLineService/DeleteOrderLineByIDResponse")]
        System.Threading.Tasks.Task DeleteOrderLineByIDAsync(int OrderLineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderLineService/EditOrderLine", ReplyAction="http://tempuri.org/IOrderLineService/EditOrderLineResponse")]
        void EditOrderLine(Gui.OrderLineServiceRef.OrderLine orderLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderLineService/EditOrderLine", ReplyAction="http://tempuri.org/IOrderLineService/EditOrderLineResponse")]
        System.Threading.Tasks.Task EditOrderLineAsync(Gui.OrderLineServiceRef.OrderLine orderLine);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderLineServiceChannel : Gui.OrderLineServiceRef.IOrderLineService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderLineServiceClient : System.ServiceModel.ClientBase<Gui.OrderLineServiceRef.IOrderLineService>, Gui.OrderLineServiceRef.IOrderLineService {
        
        public OrderLineServiceClient() {
        }
        
        public OrderLineServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderLineServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderLineServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderLineServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateOrderLine(Gui.OrderLineServiceRef.OrderLine orderline, int orderID) {
            base.Channel.CreateOrderLine(orderline, orderID);
        }
        
        public System.Threading.Tasks.Task CreateOrderLineAsync(Gui.OrderLineServiceRef.OrderLine orderline, int orderID) {
            return base.Channel.CreateOrderLineAsync(orderline, orderID);
        }
        
        public Gui.OrderLineServiceRef.OrderLine GetOrderLine(int ID) {
            return base.Channel.GetOrderLine(ID);
        }
        
        public System.Threading.Tasks.Task<Gui.OrderLineServiceRef.OrderLine> GetOrderLineAsync(int ID) {
            return base.Channel.GetOrderLineAsync(ID);
        }
        
        public Gui.OrderLineServiceRef.OrderLine[] GetAllOrderlines() {
            return base.Channel.GetAllOrderlines();
        }
        
        public System.Threading.Tasks.Task<Gui.OrderLineServiceRef.OrderLine[]> GetAllOrderlinesAsync() {
            return base.Channel.GetAllOrderlinesAsync();
        }
        
        public Gui.OrderLineServiceRef.Drink GetDrink(int id) {
            return base.Channel.GetDrink(id);
        }
        
        public System.Threading.Tasks.Task<Gui.OrderLineServiceRef.Drink> GetDrinkAsync(int id) {
            return base.Channel.GetDrinkAsync(id);
        }
        
        public void DeleteOrderLineByID(int OrderLineID) {
            base.Channel.DeleteOrderLineByID(OrderLineID);
        }
        
        public System.Threading.Tasks.Task DeleteOrderLineByIDAsync(int OrderLineID) {
            return base.Channel.DeleteOrderLineByIDAsync(OrderLineID);
        }
        
        public void EditOrderLine(Gui.OrderLineServiceRef.OrderLine orderLine) {
            base.Channel.EditOrderLine(orderLine);
        }
        
        public System.Threading.Tasks.Task EditOrderLineAsync(Gui.OrderLineServiceRef.OrderLine orderLine) {
            return base.Channel.EditOrderLineAsync(orderLine);
        }
    }
}
